There are N events in Geek's city. You are given two arrays start[] and end[] denoting starting and ending day of the events respectively. Event i starts at start[i] and ends at end[i].
You can attend an event i at any day d between start[i] and end[i] (start[i] â‰¤ d â‰¤ end[i]). But you can attend only one event in a day.
Find the maximum number of events you can attend.



//important question asked by adobe many number of times as well as in amazon 



int maxEvents(int start[], int end[], int n) {
       unordered_set<int>s;
       vector<pair<int,int>> v;
       for(int i = 0; i<n; i++)
        v.push_back({start[i],end[i]});
        sort(v.begin(),v.end());
         for(int i=n-1;i>=0;i--){
             if(s.find(v[i].second) == s.end())
                 s.insert(v[i].second);
             else{
                int e = v[i].second;
                while(e>=v[i].first){
                    if(s.find(e)==s.end()){
                        s.insert(e);
                        break;
                    }
                    e--;}}}
        return s.size();
    }
