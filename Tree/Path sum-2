

Code
113. Path Sum II
Solved
Medium
Topics
Companies
Given the root of a binary tree and an integer targetSum, return all root-to-leaf paths where the sum of the node values in the path equals targetSum. Each path should be returned as a list of the node values, not node references.

A root-to-leaf path is a path starting from the root and ending at any leaf node. A leaf is a node with no children.

 
//important question from the leetcode revise it again and again and do it again 


class Solution {
public:

    void helper(TreeNode*root,vector<vector<int>>&ans,vector<int>temp,int k)
    {
        if(root==NULL) return;
        temp.push_back(root->val);
        if(root->right==NULL and root->left==NULL)
        {
            int sum=0;
            for(auto e:temp) sum=sum+e;
            if(sum==k)
            {
                ans.push_back(temp);
                temp.clear();
            }
            else return;
        }
        helper(root->left,ans,temp,k);
        helper(root->right,ans,temp,k);
    }

    vector<vector<int>> pathSum(TreeNode* root, int targetSum)
    {
        vector<vector<int>>ans;
        vector<int>temp;
        helper(root,ans,temp,targetSum);
        return ans;
    }
};
